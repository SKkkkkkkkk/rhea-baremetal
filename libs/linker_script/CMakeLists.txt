cmake_minimum_required(VERSION 3.15...3.28)

set(TARGET_NAME "linker_script")

project(${TARGET_NAME}
	VERSION 0.1
	DESCRIPTION "linker script"
	LANGUAGES C
)

string(TOLOWER $CACHE{CPU_ARCH} CPU_ARCH_LOWER)
set(LINKER_SCRIPT_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/linker.${CPU_ARCH_LOWER}.ld.S)
set(LINKER_SCRIPT_OBJECT ${CMAKE_CURRENT_BINARY_DIR}/linker.${CPU_ARCH_LOWER}.ld)

add_custom_command(
	OUTPUT ${LINKER_SCRIPT_OBJECT}
	DEPENDS
		${LINKER_SCRIPT_SOURCE}
	COMMAND 
		${CMAKE_C_COMPILER} -E -P -x assembler-with-cpp -D__LINKER__
		-I${SDK_PATH}/common/inc -D$CACHE{BOARD} 
		-DSTACK_SIZE=$CACHE{STACK_SIZE} -DHEAP_SIZE=$CACHE{HEAP_SIZE}
		-DMEM_SCHEME_ROM=1 -DMEM_SCHEME_SRAM=2 -DMEM_SCHEME_DRAM=3 -DMEM_SCHEME_CUSTOM=4 -DMEM_SCHEME=MEM_SCHEME_$CACHE{MEM_SCHEME} 
		${LINKER_SCRIPT_SOURCE}
		-o ${LINKER_SCRIPT_OBJECT}
	VERBATIM
)

add_custom_target(gen_linker.ld DEPENDS ${LINKER_SCRIPT_OBJECT})

add_library(${TARGET_NAME} INTERFACE)
add_dependencies(${TARGET_NAME} gen_linker.ld)
target_link_options(${TARGET_NAME} INTERFACE -T ${LINKER_SCRIPT_OBJECT})
set_target_properties(${TARGET_NAME} PROPERTIES INTERFACE_LINK_DEPENDS ${LINKER_SCRIPT_OBJECT})